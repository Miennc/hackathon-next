{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getProductsSuccess, getProductsError, getSellingProductsSuccess, getSellingProductsError, getHotProductsSuccess, getHotProductsError, postOrderSuccess, postOrderError } from \"../actions/product\";\nimport { GET_PRODUCTS, GET_SELLING_PRODUCTS, GET_HOT_PRODUCTS, POST_ORDER } from \"../contants/product\";\nexport function* getProducts(action) {\n  var _action$offset, _action$offset2, _action$offset3, _action$offset4;\n\n  const url = `api/products/get?active=1&id_website=4&id_cat=${(_action$offset = action.offset) !== null && _action$offset !== void 0 && _action$offset.id_cart ? (_action$offset2 = action.offset) === null || _action$offset2 === void 0 ? void 0 : _action$offset2.id_cart : ''}&id_filter=${(_action$offset3 = action.offset) !== null && _action$offset3 !== void 0 && _action$offset3.id_filter ? (_action$offset4 = action.offset) === null || _action$offset4 === void 0 ? void 0 : _action$offset4.id_filter : ''}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsError(error.message));\n  }\n}\nexport function* postOrder(payload) {\n  const url = `orders/add-from-react?id_website=4`;\n  const response = yield call(Request, url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json, text-plain, */*\",\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    },\n    credentials: \"same-origin\",\n    body: JSON.stringify(payload)\n  });\n}\nexport function* getSellingProducts(action) {\n  const url = `api/products/get?active=1&id_website=4&feature=1`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getSellingProductsSuccess(response));\n  } catch (error) {\n    yield put(getSellingProductsError(error.message));\n  }\n}\nexport function* getHotProducts(action) {\n  const url = `api/products/get?active=1&id_website=4&highlight=1&offset=6`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getHotProductsSuccess(response));\n  } catch (error) {\n    yield put(getHotProductsError(error.message));\n  }\n}\nexport default function* ProductSaga() {\n  yield all([yield takeLatest(GET_PRODUCTS, getProducts), yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts), yield takeLatest(GET_HOT_PRODUCTS, getHotProducts), // yield takeLatest(GET_DETAIL, getDetail),\n  yield takeLatest(POST_ORDER, postOrder)]);\n}","map":{"version":3,"sources":["C:/Users/MienNC/Desktop/NextJs/src/sagas/product.js"],"names":["put","takeLatest","all","call","Request","getProductsSuccess","getProductsError","getSellingProductsSuccess","getSellingProductsError","getHotProductsSuccess","getHotProductsError","postOrderSuccess","postOrderError","GET_PRODUCTS","GET_SELLING_PRODUCTS","GET_HOT_PRODUCTS","POST_ORDER","getProducts","action","url","offset","id_cart","id_filter","response","error","message","postOrder","payload","method","headers","Accept","credentials","body","JSON","stringify","getSellingProducts","getHotProducts","ProductSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,yBAHJ,EAIIC,uBAJJ,EAKIC,qBALJ,EAMIC,mBANJ,EAOIC,gBAPJ,EAQIC,cARJ,QASO,oBATP;AAWA,SAAQC,YAAR,EAAsBC,oBAAtB,EAA4CC,gBAA5C,EAA8DC,UAA9D,QAAgF,qBAAhF;AAEA,OAAO,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAAA;;AACjC,QAAMC,GAAG,GAAI,iDAAgD,kBAAAD,MAAM,CAACE,MAAP,0DAAeC,OAAf,sBAAyBH,MAAM,CAACE,MAAhC,oDAAyB,gBAAeC,OAAxC,GAAgD,EAAG,cAAa,mBAAAH,MAAM,CAACE,MAAP,4DAAeE,SAAf,sBAA2BJ,MAAM,CAACE,MAAlC,oDAA2B,gBAAeE,SAA1C,GAAqD,EAAG,EAArL;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACC,OAAD,EAAUe,GAAV,CAA3B;AACA,UAAMnB,GAAG,CAACK,kBAAkB,CAACkB,QAAD,CAAnB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMxB,GAAG,CAACM,gBAAgB,CAACkB,KAAK,CAACC,OAAP,CAAjB,CAAT;AACH;AACJ;AAED,OAAQ,UAAUC,SAAV,CAAoBC,OAApB,EAA6B;AACjC,QAAMR,GAAG,GAAI,oCAAb;AACA,QAAMI,QAAQ,GAAG,MAAMpB,IAAI,CAACC,OAAD,EAAUe,GAAV,EAAe;AACtCS,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAETC,MAAAA,MAAM,EAAE,mCAFC;AAGT,0BAAoB;AAHX,KAF6B;AAOtCC,IAAAA,WAAW,EAAE,aAPyB;AAQtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AARgC,GAAf,CAA3B;AAUH;AAED,OAAO,UAAUQ,kBAAV,CAA6BjB,MAA7B,EAAqC;AACxC,QAAMC,GAAG,GAAI,kDAAb;;AACA,MAAI;AACA,UAAMI,QAAQ,GAAG,MAAMpB,IAAI,CAACC,OAAD,EAAUe,GAAV,CAA3B;AACA,UAAMnB,GAAG,CAACO,yBAAyB,CAACgB,QAAD,CAA1B,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMxB,GAAG,CAACQ,uBAAuB,CAACgB,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUW,cAAV,CAAyBlB,MAAzB,EAAiC;AACpC,QAAMC,GAAG,GAAI,6DAAb;;AACA,MAAI;AACA,UAAMI,QAAQ,GAAG,MAAMpB,IAAI,CAACC,OAAD,EAAUe,GAAV,CAA3B;AACA,UAAMnB,GAAG,CAACS,qBAAqB,CAACc,QAAD,CAAtB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMxB,GAAG,CAACU,mBAAmB,CAACc,KAAK,CAACC,OAAP,CAApB,CAAT;AACH;AACJ;AAED,eAAe,UAAUY,WAAV,GAAwB;AACnC,QAAMnC,GAAG,CAAC,CACN,MAAMD,UAAU,CAACY,YAAD,EAAeI,WAAf,CADV,EAEN,MAAMhB,UAAU,CAACa,oBAAD,EAAuBqB,kBAAvB,CAFV,EAGN,MAAMlC,UAAU,CAACc,gBAAD,EAAmBqB,cAAnB,CAHV,EAIN;AACA,QAAMnC,UAAU,CAACe,UAAD,EAAaU,SAAb,CALV,CAAD,CAAT;AAOH","sourcesContent":["import {put, takeLatest, all, call} from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n    getProductsSuccess,\r\n    getProductsError,\r\n    getSellingProductsSuccess,\r\n    getSellingProductsError,\r\n    getHotProductsSuccess,\r\n    getHotProductsError,\r\n    postOrderSuccess,\r\n    postOrderError,\r\n} from \"../actions/product\";\r\n\r\nimport {GET_PRODUCTS, GET_SELLING_PRODUCTS, GET_HOT_PRODUCTS, POST_ORDER } from \"../contants/product\";\r\n\r\nexport function* getProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&id_cat=${action.offset?.id_cart ? action.offset?.id_cart:''}&id_filter=${action.offset?.id_filter ? action.offset?.id_filter :''}`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport  function* postOrder(payload) {\r\n    const url = `orders/add-from-react?id_website=4`\r\n    const response = yield call(Request, url, {\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json, text-plain, */*\",\r\n        \"X-Requested-With\": \"XMLHttpRequest\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(payload),\r\n    });\r\n}\r\n\r\nexport function* getSellingProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&feature=1`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getSellingProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getSellingProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport function* getHotProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&highlight=1&offset=6`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getHotProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getHotProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport default function* ProductSaga() {\r\n    yield all([\r\n        yield takeLatest(GET_PRODUCTS, getProducts),\r\n        yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts),\r\n        yield takeLatest(GET_HOT_PRODUCTS, getHotProducts),\r\n        // yield takeLatest(GET_DETAIL, getDetail),\r\n        yield takeLatest(POST_ORDER, postOrder),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}