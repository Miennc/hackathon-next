{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getProductsSuccess, getProductsError, getSellingProductsSuccess, getSellingProductsError, getHotProductsSuccess, getHotProductsError } from \"../actions/product\";\nimport { GET_PRODUCTS, GET_SELLING_PRODUCTS, GET_HOT_PRODUCTS, GET_PRODUCT_DE } from \"../contants/product\";\nexport function* getProducts(action) {\n  const url = `api/products/get?active=1&id_website=4`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsError(error.message));\n  }\n}\nexport function* getProductDetails(action) {\n  const url = `api/products/detail?alias=${action.payload.alias}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getProductDetailsSuccess(response));\n  } catch (error) {\n    yield put(getProductDetailsError(error.message));\n  }\n}\nexport function* getSellingProducts(action) {\n  const url = `api/products/get?active=1&id_website=4&feature=1`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getSellingProductsSuccess(response));\n  } catch (error) {\n    yield put(getSellingProductsError(error.message));\n  }\n}\nexport function* getHotProducts(action) {\n  const url = `api/products/get?active=1&id_website=4&highlight=1&offset=6`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getHotProductsSuccess(response));\n  } catch (error) {\n    yield put(getHotProductsError(error.message));\n  }\n}\nexport default function* ProductSaga() {\n  yield all([yield takeLatest(GET_PRODUCTS, getProducts), yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts), yield takeLatest(GET_HOT_PRODUCTS, getHotProducts)]);\n}","map":{"version":3,"sources":["C:/Users/MienNC/Desktop/NextJs/src/sagas/product.js"],"names":["put","takeLatest","all","call","Request","getProductsSuccess","getProductsError","getSellingProductsSuccess","getSellingProductsError","getHotProductsSuccess","getHotProductsError","GET_PRODUCTS","GET_SELLING_PRODUCTS","GET_HOT_PRODUCTS","GET_PRODUCT_DE","getProducts","action","url","response","error","message","getProductDetails","payload","alias","getProductDetailsSuccess","getProductDetailsError","getSellingProducts","getHotProducts","ProductSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,yBAHJ,EAIIC,uBAJJ,EAKIC,qBALJ,EAMIC,mBANJ,QAOO,oBAPP;AASA,SAAQC,YAAR,EAAsBC,oBAAtB,EAA4CC,gBAA5C,EAA6DC,cAA7D,QAAkF,qBAAlF;AAEA,OAAO,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AACjC,QAAMC,GAAG,GAAI,wCAAb;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACC,OAAD,EAAUa,GAAV,CAA3B;AACA,UAAMjB,GAAG,CAACK,kBAAkB,CAACa,QAAD,CAAnB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACM,gBAAgB,CAACa,KAAK,CAACC,OAAP,CAAjB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,iBAAV,CAA4BL,MAA5B,EAAoC;AACvC,QAAMC,GAAG,GAAI,6BAA4BD,MAAM,CAACM,OAAP,CAAeC,KAAM,EAA9D;;AACA,MAAI;AACA,UAAML,QAAQ,GAAG,MAAMf,IAAI,CAACC,OAAD,EAAUa,GAAV,CAA3B;AACA,UAAMjB,GAAG,CAACwB,wBAAwB,CAACN,QAAD,CAAzB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACyB,sBAAsB,CAACN,KAAK,CAACC,OAAP,CAAvB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,kBAAV,CAA6BV,MAA7B,EAAqC;AACxC,QAAMC,GAAG,GAAI,kDAAb;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACC,OAAD,EAAUa,GAAV,CAA3B;AACA,UAAMjB,GAAG,CAACO,yBAAyB,CAACW,QAAD,CAA1B,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACQ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,cAAV,CAAyBX,MAAzB,EAAiC;AACpC,QAAMC,GAAG,GAAI,6DAAb;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACC,OAAD,EAAUa,GAAV,CAA3B;AACA,UAAMjB,GAAG,CAACS,qBAAqB,CAACS,QAAD,CAAtB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACU,mBAAmB,CAACS,KAAK,CAACC,OAAP,CAApB,CAAT;AACH;AACJ;AAED,eAAe,UAAUQ,WAAV,GAAwB;AACnC,QAAM1B,GAAG,CAAC,CACN,MAAMD,UAAU,CAACU,YAAD,EAAeI,WAAf,CADV,EAEN,MAAMd,UAAU,CAACW,oBAAD,EAAuBc,kBAAvB,CAFV,EAGN,MAAMzB,UAAU,CAACY,gBAAD,EAAmBc,cAAnB,CAHV,CAAD,CAAT;AAKH","sourcesContent":["import {put, takeLatest, all, call} from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n    getProductsSuccess,\r\n    getProductsError,\r\n    getSellingProductsSuccess,\r\n    getSellingProductsError,\r\n    getHotProductsSuccess,\r\n    getHotProductsError,\r\n} from \"../actions/product\";\r\n\r\nimport {GET_PRODUCTS, GET_SELLING_PRODUCTS, GET_HOT_PRODUCTS,GET_PRODUCT_DE} from \"../contants/product\";\r\n\r\nexport function* getProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport function* getProductDetails(action) {\r\n    const url = `api/products/detail?alias=${action.payload.alias}`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getProductDetailsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getProductDetailsError(error.message));\r\n    }\r\n}\r\n\r\nexport function* getSellingProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&feature=1`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getSellingProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getSellingProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport function* getHotProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&highlight=1&offset=6`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getHotProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getHotProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport default function* ProductSaga() {\r\n    yield all([\r\n        yield takeLatest(GET_PRODUCTS, getProducts),\r\n        yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts),\r\n        yield takeLatest(GET_HOT_PRODUCTS, getHotProducts),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}